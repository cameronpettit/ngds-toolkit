name: Publish NPM

on:
  release:
    types: [created]

jobs:
  package: 
    name: "Publish to NPM"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
          scope: "@digitalspace"
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      ### Install if no cache exists ###
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install --silent --frozen-lockfile

      ### Build if no cache exists ###
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            **/dist
          key: ${{ github.sha }}-dist
      - name: Run Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: yarn build

      - run: git config --global user.email ${{ secrets.EMAIL }}
      - run: git config --global user.name ${{ secrets.USERNAME }}
      # - run: npm version ${{ github.ref_name }}
      - run: cd dist/ngds-toolkit  
      - run: npm version ${{ github.ref_name }}
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


# name: Publish NPM

# on:
#   release:
#     types: [created]

# jobs:
#   package:
#     name: "Create Package"
#     runs-on: ubuntu-20.04

#     strategy:
#       matrix:
#         node-version: [14.x]
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v2
#         with:
#           ref: ${{ github.event.release.target_commitish }}

#       ### Install if no cache exists ###
#       - name: Setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: "yarn"
#       - run: yarn install --silent --frozen-lockfile

#       ### Build if no cache exists ###
#       - name: Cache Build
#         id: cache-build
#         uses: actions/cache@v3
#         with:
#           path: |
#             **/dist
#           key: ${{ github.sha }}-dist
#       - name: Run Build
#         if: steps.cache-build.outputs.cache-hit != 'true'
#         run: yarn build

#       - run: git config --global user.email ${{ secrets.EMAIL }}
#       - run: git config --global user.name ${{ secrets.USERNAME }}
#       - run: npm version ${{ github.ref_name }}

#       - run: echo $(ls)
#       - run: cd dist/ngds-toolkit
#       - run: echo $(ls)
#       # - run: npm login --scope=@digitalspace --registry=https://registry.npmjs.org/@digitalspace
#       - run: npm publish --access public
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

#       # - name: Validate and extract release information
#       #   id: release
#       #   uses: manovotny/github-releases-for-automated-package-publishing-action@v1.0.0
#       # - run: npm version --newversion --allow-same-version ${{ steps.release.outputs.version }} --tag ${{ steps.release.outputs.tag }}
#       # - run: cd dist/ngds-toolkit
#       # - run: npm pack
#       # - name: Upload
#       #   uses: actions/upload-artifact@v2
#       #   with:
#       #       name: package
#       #       path: "*.tgz"

#   # publish:
#   #   name: "Publish to GitHub Packages and NPM"
#   #   needs: [package]
#   #   runs-on: ubuntu-20.04
#   #   permissions: 
#   #     contents: read
#   #     packages: write 
#   #   steps:
#   #   - uses: actions/checkout@v2
#   #   - uses: actions/setup-node@v2
#   #     with:
#   #       node-version: '14.x'
#   #       cache: 'npm'
#   #       registry-url: 'https://registry.npmjs.org'
#   #   - name: NPM Publish
#   #     uses: actions/download-artifact@v2
#   #     with:
#   #       name: package
#   #   - run: echo $(ls)
#   #   - run: cd dist/ngds-toolkit
#   #   - run: echo $(ls)
#   #   - run: npm publish --access public
#   #     env:
#   #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#   #   # - uses: actions/setup-node@v2
#   #   #   with:
#   #   #     node-version: 14.x
#   #   #     registry-url: https://npm.pkg.github.com/
#   #   #     scope: "@digitalspace"
#   #   # - run: echo "registry=https://npm.pkg.github.com/@digitalspace" >> .npmrc
#   #   # - run: npm publish $(ls *.tgz)
#   #   #   env:
#   #   #     NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}